"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[683],{1303:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var n=t(5893),o=t(1151);const i={},r="useXMLHttpService",d={id:"hooks/useXMLHttpService",title:"useXMLHttpService",description:"This hook is used to provide a uploadService to your FileUpload components.",source:"@site/docs/hooks/useXMLHttpService.mdx",sourceDirName:"hooks",slug:"/hooks/useXMLHttpService",permalink:"/mui-file-upload/docs/hooks/useXMLHttpService",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useFileUploader",permalink:"/mui-file-upload/docs/hooks/useFileUploader"},next:{title:"Types",permalink:"/mui-file-upload/docs/category/types"}},l={},p=[{value:"Required Arguments",id:"required-arguments",level:2},{value:"endpoint <sup>string</sup>",id:"endpoint-string",level:4},{value:"Optional Arguments",id:"optional-arguments",level:2},{value:"method <sup>string</sup>",id:"method-string",level:4},{value:"modifyRequest <sup>(xhr: XMLHttpRequest) =&gt; Promise&lt;void&gt; | void</sup>",id:"modifyrequest-xhr-xmlhttprequest--promisevoid--void",level:4},{value:"responseTransformer <sup>(responseText: string) =&gt; Response</sup>",id:"responsetransformer-responsetext-string--response",level:4}];function u(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"usexmlhttpservice",children:"useXMLHttpService"}),"\n",(0,n.jsx)(s.p,{children:"This hook is used to provide a uploadService to your FileUpload components."}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["The name of this hook is a bit of a misnamor as it has nothing to do with XML specifically. Rather the name indicates that it uses\nthe ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",children:"XMLHttpRequest"}),".\nThe reason it uses ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",children:"XMLHttpRequest"})," over\nsomething like ",(0,n.jsx)(s.code,{children:"fetch"})," is because it allows for tracking upload progress."]})}),"\n",(0,n.jsxs)(s.p,{children:["Returns: ",(0,n.jsx)(s.a,{href:"../types/FileUploadService",children:"FileUploadService<Response>"})]}),"\n",(0,n.jsx)(s.h2,{id:"required-arguments",children:"Required Arguments"}),"\n",(0,n.jsxs)(s.h4,{id:"endpoint-string",children:["endpoint ",(0,n.jsx)("sup",{children:"string"})]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"The endpoint where the file upload api exists."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"optional-arguments",children:"Optional Arguments"}),"\n",(0,n.jsxs)(s.h4,{id:"method-string",children:["method ",(0,n.jsx)("sup",{children:"string"})]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:'The http method for the file upload api, aka "POST", "PUT", etc.'}),"\n",(0,n.jsxs)(s.p,{children:["Default: ",(0,n.jsx)(s.strong,{children:'"POST"'})]}),"\n"]}),"\n",(0,n.jsxs)(s.h4,{id:"modifyrequest-xhr-xmlhttprequest--promisevoid--void",children:["modifyRequest ",(0,n.jsx)("sup",{children:"(xhr: XMLHttpRequest) => Promise<void> | void"})]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["This is useful when you need add headers to the request. Such as ",(0,n.jsx)(s.strong,{children:"Authorization"})," header"]})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"A function that can be used to modify the request."}),"\n"]}),"\n",(0,n.jsxs)(s.h4,{id:"responsetransformer-responsetext-string--response",children:["responseTransformer ",(0,n.jsx)("sup",{children:"(responseText: string) => Response"})]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:["Used to transform response body to whatever you need. Typically ",(0,n.jsx)(s.em,{children:"Response"})," type is a string indicating a url point to the file which has been uploaded.\nThis allows you to take whatever your response is for the API (JSON, XML, etc) and get the link to the file which was uploaded."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>d,a:()=>r});var n=t(7294);const o={},i=n.createContext(o);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);