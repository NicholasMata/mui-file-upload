"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[158],{3576:(e,l,o)=>{o.r(l),o.d(l,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>t});var s=o(5893),n=o(1151);const a={},i="FileUploadManager",r={id:"types/FileUploadManager",title:"FileUploadManager",description:"Used to manage multiple file uploads. useFileUploadManager can be used to create a",source:"@site/docs/types/FileUploadManager.mdx",sourceDirName:"types",slug:"/types/FileUploadManager",permalink:"/mui-file-upload/docs/types/FileUploadManager",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FileUpload",permalink:"/mui-file-upload/docs/types/FileUpload"},next:{title:"FileUploadService",permalink:"/mui-file-upload/docs/types/FileUploadService"}},d={},t=[{value:"fileUploads",id:"fileuploads",level:4},{value:"removeFileUpload <sup>(fileUploadToRemove: FileUpload&lt;Response&gt;) =&gt; void</sup>",id:"removefileupload-fileuploadtoremove-fileuploadresponse--void",level:4},{value:"handlers <sup>FileUploaderObservers&lt;Response&gt;</sup>",id:"handlers-fileuploaderobserversresponse",level:4}];function p(e){const l={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h4:"h4",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.h1,{id:"fileuploadmanager",children:"FileUploadManager"}),"\n",(0,s.jsxs)(l.p,{children:["Used to manage multiple file uploads. ",(0,s.jsx)(l.a,{href:"/mui-file-upload/docs/hooks/useFileUploadManager",children:"useFileUploadManager"})," can be used to create a\nFileUploadManager."]}),"\n",(0,s.jsxs)(l.p,{children:["Used by ",(0,s.jsx)(l.a,{href:"../components/basics/MultiFileUpload",children:"MultiFileUpload"})," to manage the FileUploads."]}),"\n",(0,s.jsx)(l.h4,{id:"fileuploads",children:"fileUploads"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-ts",children:"{\n  inProgress: Array<FileUpload<Response>>;\n  successful: Array<FileUpload<Response>>;\n  failed: Array<FileUpload<Response>>;\n  length: number;\n}\n"})}),"\n",(0,s.jsxs)(l.blockquote,{children:["\n",(0,s.jsx)(l.p,{children:"An object containing the FileUploads in there different states."}),"\n"]}),"\n",(0,s.jsxs)(l.h4,{id:"removefileupload-fileuploadtoremove-fileuploadresponse--void",children:["removeFileUpload ",(0,s.jsxs)("sup",{children:["(fileUploadToRemove: ",(0,s.jsx)(l.a,{href:"./FileUpload",children:"FileUpload<Response>"}),") => void"]})]}),"\n",(0,s.jsxs)(l.blockquote,{children:["\n",(0,s.jsxs)(l.p,{children:["A function which can be called to remove a FileUpload from ",(0,s.jsx)(l.code,{children:"fileUploads"})]}),"\n"]}),"\n",(0,s.jsxs)(l.h4,{id:"handlers-fileuploaderobserversresponse",children:["handlers ",(0,s.jsx)("sup",{children:(0,s.jsx)(l.a,{href:"./FileUploaderObservers",children:"FileUploaderObservers<Response>"})})]}),"\n",(0,s.jsxs)(l.blockquote,{children:["\n",(0,s.jsx)(l.p,{children:"A set of functions which is used to rely FileUpload status information to the manager."}),"\n"]})]})}function c(e={}){const{wrapper:l}={...(0,n.a)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},1151:(e,l,o)=>{o.d(l,{Z:()=>r,a:()=>i});var s=o(7294);const n={},a=s.createContext(n);function i(e){const l=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(a.Provider,{value:l},e.children)}}}]);